// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CreateRoom.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CreateRoom.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CSCreateRoomRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSCreateRoomRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSCreateRoomResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSCreateRoomResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSJoinRoomRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSJoinRoomRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSJoinRoomResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSJoinRoomResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSFightReadyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSFightReadyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSFightReadyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSFightReadyResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CreateRoom_2eproto() {
  protobuf_AddDesc_CreateRoom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CreateRoom.proto");
  GOOGLE_CHECK(file != NULL);
  CSCreateRoomRequest_descriptor_ = file->message_type(0);
  static const int CSCreateRoomRequest_offsets_[1] = {
  };
  CSCreateRoomRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSCreateRoomRequest_descriptor_,
      CSCreateRoomRequest::default_instance_,
      CSCreateRoomRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCreateRoomRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCreateRoomRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSCreateRoomRequest));
  CSCreateRoomResponse_descriptor_ = file->message_type(1);
  static const int CSCreateRoomResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCreateRoomResponse, result_),
  };
  CSCreateRoomResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSCreateRoomResponse_descriptor_,
      CSCreateRoomResponse::default_instance_,
      CSCreateRoomResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCreateRoomResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSCreateRoomResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSCreateRoomResponse));
  CSJoinRoomRequest_descriptor_ = file->message_type(2);
  static const int CSJoinRoomRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomRequest, uin_),
  };
  CSJoinRoomRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSJoinRoomRequest_descriptor_,
      CSJoinRoomRequest::default_instance_,
      CSJoinRoomRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSJoinRoomRequest));
  CSJoinRoomResponse_descriptor_ = file->message_type(3);
  static const int CSJoinRoomResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomResponse, result_),
  };
  CSJoinRoomResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSJoinRoomResponse_descriptor_,
      CSJoinRoomResponse::default_instance_,
      CSJoinRoomResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSJoinRoomResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSJoinRoomResponse));
  CSFightReadyRequest_descriptor_ = file->message_type(4);
  static const int CSFightReadyRequest_offsets_[1] = {
  };
  CSFightReadyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSFightReadyRequest_descriptor_,
      CSFightReadyRequest::default_instance_,
      CSFightReadyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSFightReadyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSFightReadyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSFightReadyRequest));
  CSFightReadyResponse_descriptor_ = file->message_type(5);
  static const int CSFightReadyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSFightReadyResponse, result_),
  };
  CSFightReadyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSFightReadyResponse_descriptor_,
      CSFightReadyResponse::default_instance_,
      CSFightReadyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSFightReadyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSFightReadyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSFightReadyResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CreateRoom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSCreateRoomRequest_descriptor_, &CSCreateRoomRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSCreateRoomResponse_descriptor_, &CSCreateRoomResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSJoinRoomRequest_descriptor_, &CSJoinRoomRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSJoinRoomResponse_descriptor_, &CSJoinRoomResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSFightReadyRequest_descriptor_, &CSFightReadyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSFightReadyResponse_descriptor_, &CSFightReadyResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CreateRoom_2eproto() {
  delete CSCreateRoomRequest::default_instance_;
  delete CSCreateRoomRequest_reflection_;
  delete CSCreateRoomResponse::default_instance_;
  delete CSCreateRoomResponse_reflection_;
  delete CSJoinRoomRequest::default_instance_;
  delete CSJoinRoomRequest_reflection_;
  delete CSJoinRoomResponse::default_instance_;
  delete CSJoinRoomResponse_reflection_;
  delete CSFightReadyRequest::default_instance_;
  delete CSFightReadyRequest_reflection_;
  delete CSFightReadyResponse::default_instance_;
  delete CSFightReadyResponse_reflection_;
}

void protobuf_AddDesc_CreateRoom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020CreateRoom.proto\"\025\n\023CSCreateRoomReques"
    "t\"&\n\024CSCreateRoomResponse\022\016\n\006result\030\001 \001("
    "\005\" \n\021CSJoinRoomRequest\022\013\n\003uin\030\001 \001(\005\"$\n\022C"
    "SJoinRoomResponse\022\016\n\006result\030\001 \001(\005\"\025\n\023CSF"
    "ightReadyRequest\"&\n\024CSFightReadyResponse"
    "\022\016\n\006result\030\001 \001(\005", 216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CreateRoom.proto", &protobuf_RegisterTypes);
  CSCreateRoomRequest::default_instance_ = new CSCreateRoomRequest();
  CSCreateRoomResponse::default_instance_ = new CSCreateRoomResponse();
  CSJoinRoomRequest::default_instance_ = new CSJoinRoomRequest();
  CSJoinRoomResponse::default_instance_ = new CSJoinRoomResponse();
  CSFightReadyRequest::default_instance_ = new CSFightReadyRequest();
  CSFightReadyResponse::default_instance_ = new CSFightReadyResponse();
  CSCreateRoomRequest::default_instance_->InitAsDefaultInstance();
  CSCreateRoomResponse::default_instance_->InitAsDefaultInstance();
  CSJoinRoomRequest::default_instance_->InitAsDefaultInstance();
  CSJoinRoomResponse::default_instance_->InitAsDefaultInstance();
  CSFightReadyRequest::default_instance_->InitAsDefaultInstance();
  CSFightReadyResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CreateRoom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CreateRoom_2eproto {
  StaticDescriptorInitializer_CreateRoom_2eproto() {
    protobuf_AddDesc_CreateRoom_2eproto();
  }
} static_descriptor_initializer_CreateRoom_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CSCreateRoomRequest::CSCreateRoomRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSCreateRoomRequest::InitAsDefaultInstance() {
}

CSCreateRoomRequest::CSCreateRoomRequest(const CSCreateRoomRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSCreateRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSCreateRoomRequest::~CSCreateRoomRequest() {
  SharedDtor();
}

void CSCreateRoomRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSCreateRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSCreateRoomRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSCreateRoomRequest_descriptor_;
}

const CSCreateRoomRequest& CSCreateRoomRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSCreateRoomRequest* CSCreateRoomRequest::default_instance_ = NULL;

CSCreateRoomRequest* CSCreateRoomRequest::New() const {
  return new CSCreateRoomRequest;
}

void CSCreateRoomRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSCreateRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CSCreateRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSCreateRoomRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSCreateRoomRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSCreateRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSCreateRoomRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSCreateRoomRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSCreateRoomRequest::MergeFrom(const CSCreateRoomRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSCreateRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSCreateRoomRequest::CopyFrom(const CSCreateRoomRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSCreateRoomRequest::IsInitialized() const {

  return true;
}

void CSCreateRoomRequest::Swap(CSCreateRoomRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSCreateRoomRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSCreateRoomRequest_descriptor_;
  metadata.reflection = CSCreateRoomRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSCreateRoomResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CSCreateRoomResponse::CSCreateRoomResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSCreateRoomResponse::InitAsDefaultInstance() {
}

CSCreateRoomResponse::CSCreateRoomResponse(const CSCreateRoomResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSCreateRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSCreateRoomResponse::~CSCreateRoomResponse() {
  SharedDtor();
}

void CSCreateRoomResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSCreateRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSCreateRoomResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSCreateRoomResponse_descriptor_;
}

const CSCreateRoomResponse& CSCreateRoomResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSCreateRoomResponse* CSCreateRoomResponse::default_instance_ = NULL;

CSCreateRoomResponse* CSCreateRoomResponse::New() const {
  return new CSCreateRoomResponse;
}

void CSCreateRoomResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSCreateRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSCreateRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSCreateRoomResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSCreateRoomResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSCreateRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSCreateRoomResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSCreateRoomResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSCreateRoomResponse::MergeFrom(const CSCreateRoomResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSCreateRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSCreateRoomResponse::CopyFrom(const CSCreateRoomResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSCreateRoomResponse::IsInitialized() const {

  return true;
}

void CSCreateRoomResponse::Swap(CSCreateRoomResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSCreateRoomResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSCreateRoomResponse_descriptor_;
  metadata.reflection = CSCreateRoomResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSJoinRoomRequest::kUinFieldNumber;
#endif  // !_MSC_VER

CSJoinRoomRequest::CSJoinRoomRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSJoinRoomRequest::InitAsDefaultInstance() {
}

CSJoinRoomRequest::CSJoinRoomRequest(const CSJoinRoomRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSJoinRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  uin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSJoinRoomRequest::~CSJoinRoomRequest() {
  SharedDtor();
}

void CSJoinRoomRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSJoinRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSJoinRoomRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSJoinRoomRequest_descriptor_;
}

const CSJoinRoomRequest& CSJoinRoomRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSJoinRoomRequest* CSJoinRoomRequest::default_instance_ = NULL;

CSJoinRoomRequest* CSJoinRoomRequest::New() const {
  return new CSJoinRoomRequest;
}

void CSJoinRoomRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uin_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSJoinRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uin_)));
          set_has_uin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSJoinRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 uin = 1;
  if (has_uin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSJoinRoomRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 uin = 1;
  if (has_uin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSJoinRoomRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 uin = 1;
    if (has_uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSJoinRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSJoinRoomRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSJoinRoomRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSJoinRoomRequest::MergeFrom(const CSJoinRoomRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uin()) {
      set_uin(from.uin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSJoinRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSJoinRoomRequest::CopyFrom(const CSJoinRoomRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSJoinRoomRequest::IsInitialized() const {

  return true;
}

void CSJoinRoomRequest::Swap(CSJoinRoomRequest* other) {
  if (other != this) {
    std::swap(uin_, other->uin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSJoinRoomRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSJoinRoomRequest_descriptor_;
  metadata.reflection = CSJoinRoomRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSJoinRoomResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CSJoinRoomResponse::CSJoinRoomResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSJoinRoomResponse::InitAsDefaultInstance() {
}

CSJoinRoomResponse::CSJoinRoomResponse(const CSJoinRoomResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSJoinRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSJoinRoomResponse::~CSJoinRoomResponse() {
  SharedDtor();
}

void CSJoinRoomResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSJoinRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSJoinRoomResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSJoinRoomResponse_descriptor_;
}

const CSJoinRoomResponse& CSJoinRoomResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSJoinRoomResponse* CSJoinRoomResponse::default_instance_ = NULL;

CSJoinRoomResponse* CSJoinRoomResponse::New() const {
  return new CSJoinRoomResponse;
}

void CSJoinRoomResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSJoinRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSJoinRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSJoinRoomResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSJoinRoomResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSJoinRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSJoinRoomResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSJoinRoomResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSJoinRoomResponse::MergeFrom(const CSJoinRoomResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSJoinRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSJoinRoomResponse::CopyFrom(const CSJoinRoomResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSJoinRoomResponse::IsInitialized() const {

  return true;
}

void CSJoinRoomResponse::Swap(CSJoinRoomResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSJoinRoomResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSJoinRoomResponse_descriptor_;
  metadata.reflection = CSJoinRoomResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CSFightReadyRequest::CSFightReadyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSFightReadyRequest::InitAsDefaultInstance() {
}

CSFightReadyRequest::CSFightReadyRequest(const CSFightReadyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSFightReadyRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSFightReadyRequest::~CSFightReadyRequest() {
  SharedDtor();
}

void CSFightReadyRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSFightReadyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSFightReadyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSFightReadyRequest_descriptor_;
}

const CSFightReadyRequest& CSFightReadyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSFightReadyRequest* CSFightReadyRequest::default_instance_ = NULL;

CSFightReadyRequest* CSFightReadyRequest::New() const {
  return new CSFightReadyRequest;
}

void CSFightReadyRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSFightReadyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CSFightReadyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSFightReadyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSFightReadyRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSFightReadyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSFightReadyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSFightReadyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSFightReadyRequest::MergeFrom(const CSFightReadyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSFightReadyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSFightReadyRequest::CopyFrom(const CSFightReadyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSFightReadyRequest::IsInitialized() const {

  return true;
}

void CSFightReadyRequest::Swap(CSFightReadyRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSFightReadyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSFightReadyRequest_descriptor_;
  metadata.reflection = CSFightReadyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSFightReadyResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CSFightReadyResponse::CSFightReadyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CSFightReadyResponse::InitAsDefaultInstance() {
}

CSFightReadyResponse::CSFightReadyResponse(const CSFightReadyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CSFightReadyResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSFightReadyResponse::~CSFightReadyResponse() {
  SharedDtor();
}

void CSFightReadyResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSFightReadyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSFightReadyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSFightReadyResponse_descriptor_;
}

const CSFightReadyResponse& CSFightReadyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CreateRoom_2eproto();
  return *default_instance_;
}

CSFightReadyResponse* CSFightReadyResponse::default_instance_ = NULL;

CSFightReadyResponse* CSFightReadyResponse::New() const {
  return new CSFightReadyResponse;
}

void CSFightReadyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSFightReadyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CSFightReadyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CSFightReadyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CSFightReadyResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSFightReadyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSFightReadyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSFightReadyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSFightReadyResponse::MergeFrom(const CSFightReadyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSFightReadyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSFightReadyResponse::CopyFrom(const CSFightReadyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSFightReadyResponse::IsInitialized() const {

  return true;
}

void CSFightReadyResponse::Swap(CSFightReadyResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSFightReadyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSFightReadyResponse_descriptor_;
  metadata.reflection = CSFightReadyResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
